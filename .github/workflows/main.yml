name: Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Wine
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install -y wine64 wine32

      - name: Update version in package.json
        id: update_version
        run: |
          TAG=$(echo ${GITHUB_REF#refs/tags/})
          npm version $TAG --no-git-tag-version
          git config --global user.email "actions@github.com"
          git config --global user.name "github-actions"
          git commit -am "Bump version to $TAG"

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

      - name: Install project
        run: pnpm i

      - name: Download external binaries
        run: |
          wget -q https://download.sysinternals.com/files/PSTools.zip -O PSTools.zip
          mkdir -p PSTools
          unzip -q PSTools.zip -d PSTools
          mkdir -p ./resources/dist
          cp PSTools/pssuspend64.exe ./resources/dist/pssuspend.exe
          wget -q https://downloads.rclone.org/v1.67.0/rclone-v1.67.0-windows-amd64.zip
          mkdir -p RClone
          unzip -q rclone-v1.67.0-windows-amd64.zip -d RClone
          cp RClone/rclone-v1.67.0-windows-amd64/rclone.exe ./resources/dist/rclone.exe
          rm -R RClone PSTools

      - name: Build for Windows
        run: pnpm build:win

      - name: Get the previous tag
        id: get_previous_tag
        run: |
          PREVIOUS_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_ENV

      - name: Generate Changelog
        id: generate_changelog
        run: |
          PREVIOUS_TAG=${{ env.previous_tag }}
          CURRENT_TAG=$(echo ${GITHUB_REF#refs/tags/})
          CHANGELOG=$(git log $PREVIOUS_TAG..HEAD --pretty=format:"* %s")
          echo "changelog=$CHANGELOG" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: ${{ env.changelog }}
          draft: false
          prerelease: false

      - name: Upload Release Latest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/latest.yml
          asset_name: latest.yml
          asset_content_type: text/yaml

      - name: Upload Release Exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/SaveDataSynchronizer-${{ env.previous_tag }}-setup.exe
          asset_name: SaveDataSynchronizer-${{ env.previous_tag }}-setup.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Blockmap
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/SaveDataSynchronizer-${{ env.previous_tag }}-setup.exe.blockmap
          asset_name: SaveDataSynchronizer-${{ env.previous_tag }}-setup.exe.blockmap
          asset_content_type: application/octet-stream
