name: Build and Release

on:
  push:
    tags:        
      - '*'    

jobs:
  build:
    permissions: write-all
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Update version in package.json
      id: update_version
      run: |
        $tag = git describe --tags --abbrev=0
        npm version $tag --no-git-tag-version
        git config --global user.email "actions@github.com"
        git config --global user.name "github-actions"
        git commit -am "Bump version to $tag"

    - name: Push changes
      uses: ad-m/github-push-action@v0.6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main

    - name: Install project
      run: pnpm i

    - name: Download external binaries
      run: |
        curl -L -o PSTools.zip https://download.sysinternals.com/files/PSTools.zip
        powershell -command "Expand-Archive -Path PSTools.zip -DestinationPath PSTools"
        if (!(Test-Path -Path .\resources\dist)) {
          New-Item -ItemType Directory -Path .\resources\dist
        }
        Copy-Item -Path PSTools\pssuspend64.exe -Destination .\resources\dist\pssuspend.exe
        Remove-Item PSTools -Force -Recurse -ErrorAction SilentlyContinue
        curl -L -o RClone.zip https://downloads.rclone.org/v1.67.0/rclone-v1.67.0-windows-amd64.zip
        powershell -command "Expand-Archive -Path RClone.zip -DestinationPath RClone"
        Copy-Item -Path RClone\rclone-v1.67.0-windows-amd64\rclone.exe -Destination .\resources\dist\rclone.exe
        Remove-Item RClone -Force -Recurse -ErrorAction SilentlyContinue        
          
    - name: Build for Windows
      run: pnpm build:win

    - name: Get the previous tag
      id: get_previous_tag
      run: |
        PREVIOUS_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
        echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_ENV

    - name: Generate Changelog
      id: generate_changelog
      run: |
        $previous_tag = "${{ env.previous_tag }}"
        $current_tag = "${GITHUB_REF#refs/tags/}"
        $changelog = git log $previous_tag..HEAD --pretty=format:"* %s"
        echo "changelog=$changelog" >> $env:GITHUB_ENV

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        body: ${{ env.changelog }}
        draft: false
        prerelease: false

    - name: Upload Release Latest
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .\dist\latest.yml
        asset_name: latest.yml
        asset_content_type: text/yaml

    - name: Upload Release Exe
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .\dist\SaveDataSynchronizer-${{ env.previous_tag }}-setup.exe
        asset_name: SaveDataSynchronizer-${{ env.previous_tag }}-setup.exe
        asset_content_type: application/octet-stream

    - name: Upload Release Blockmap
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .\dist\SaveDataSynchronizer-${{ env.previous_tag }}-setup.exe.blockmap
        asset_name: SaveDataSynchronizer-${{ env.previous_tag }}-setup.exe.blockmap
        asset_content_type: application/octet-stream
